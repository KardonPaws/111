Для разработки информационной модели строительного объекта имеются несколько способов организации работы. Выбор способа зависит от многих факторов: количества сотрудников, размера здания, ожидаемого объема модели, требований заказчика и разрабатываемого раздела. Так имеются 3 основных метода: работа в одной модели на локальном компьютере, работа с моделью хранилища, а также работа со связанными файлами.
Первый метод - работа в одной модели, используется, когда над проектом работает только один человек. От размера модели будет зависеть будут ли использоваться связанные файлы или нет. Для небольших моделей не имеет смысла использовать связанные файлы, так как небольшой объем информации не будет перегружать модель, а исправления различных разделов будет занимать меньше времени. 
Второй метод - работа с моделью хранилища, позволяет создавать и хранить единую модель на сервере, что позволяет пользователям работать над проектом с разных компьютеров и даже в разных географических местах. В этом случае, все изменения, внесенные в модель, синхронизируются в реальном времени. Использование связанных файлов так же зависит от количества разделов и общего объема модели.
Третий метод - связанные файлы, позволяет работать над несколькими связанными файлами, каждый из которых содержит отдельные элементы проекта. Этот метод особенно удобен для проектов, которые состоят из нескольких зданий или разделены на различные участки. 
Для каждого метода необходимо устранять коллизии, ручное устранение этих коллизий отличается для каждого из способов.
Рассмотрим алгоритм ручного поиска и устранения коллизий для каждого метода.
При работе в локальном файле пересечения между различными разделами не имеет огромного влияния на общее количество коллизий. Однако, поиск данных пересечений все равно занимает существенное количество времени. После окончания работы над моделью ее необходимо экспортировать в отдельное ПО Navisworks для запуска поиска коллизий. После получения отчета, каждое пересечение надо устранить вручную, что так же занимает время. Особенность для данного метода – поиск пересечений между элементами текущего файла. В таком случае кроме пересечений между различными разделами будут показаны абсолютно все коллизии, что усложняет последующее устранение ошибок. Кроме пересечений инженерных систем и стен или перекрытий будут выведены пересечения между всеми архитектурными элементами и т.д. При ручном устранении данных ошибок необходимо запускать поиск коллизий несколько раз, чтобы не допустить никаких пересечений.
При работе с моделью хранилища алгоритм поиска и устранений коллизий в основном совпадает с первым методом, но дополнительной сложностью данного метода будет являться проблематичность координации между различными разделами.
Третий метод является самым легким при поиске пересечений. При использовании различных моделей для разных разделов будет выведен отчет только по пересечениям между этими разделами. Но алгоритм усложняется несколькими моделями. После окончания моделирования надо выгрузить каждую модель, сделать отчет по коллизиям для каждого раздела, потом распределять данные пересечения между инженерами. Так же из-за размеров моделей увеличивается количество пересечений. 
В реальных условиях для больших объектов используется совмещение второго и третьего метода: каждый раздел моделируется с помощью файла хранилища, все файлы объединяются с помощью связанных файлов.
